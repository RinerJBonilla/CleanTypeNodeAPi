{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "rest-api-posts",
    "description": "a minimal api with typescript",
    "licence": {
      "name": "MIT",
      "url": "https://opensource.org/licences/MIT"
    }
  },
  "host": "localhost:3001",
  "basePath": "",
  "tags": [
    {
      "name": "Posts",
      "description": "API for posts"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/posts": {
      "get": {
        "tags": ["Posts"],
        "summary": " Get All Posts",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Posts"],
        "summary": "Create a new post",
        "description": "",
        "operationId": "addPost",
        "cosunmes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create a new post for your blog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post created"
          },
          "500": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/posts/{postId}": {
      "get": {
        "tags": ["Posts"],
        "summary": "find post by ID",
        "description": "Returns found post",
        "operationId": "getPostById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post to return",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/PostInfo"
            }
          },
          "400": {
            "description": "post not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": ["Posts"],
        "summary": "edit post by ID",
        "description": "Returns validation message",
        "operationId": "editPost",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post to update",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "edit post for your blog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "post updated"
          },
          "400": {
            "description": "post not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Posts"],
        "summary": "delete post by ID",
        "description": "Returns validation message",
        "operationId": "deletePost",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "post deleted"
          },
          "400": {
            "description": "post not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/login": {
      "post": {
        "tags": ["Session"],
        "summary": "Create a new Session",
        "description": "",
        "operationId": "login",
        "cosunmes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create a new login session",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "token session"
          },
          "400": {
            "description": "incorrect credentials"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": ["Session"],
        "summary": "Create a new user",
        "description": "",
        "operationId": "register",
        "cosunmes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create a new User",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user created"
          },
          "500": {
            "description": "user already exists"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": " Get All Users",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": ["Users"],
        "summary": "find user by ID",
        "description": "Returns found user",
        "operationId": "getUserById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/UserData"
            }
          },
          "400": {
            "description": "user not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": ["Users"],
        "summary": "edit user by ID",
        "description": "Returns validation message",
        "operationId": "editUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to update",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "edit user data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user updated"
          },
          "400": {
            "description": "you're not allowed to edit this user"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Users"],
        "summary": "delete user by ID",
        "description": "Returns validation message",
        "operationId": "deleteUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "user deleted"
          },
          "400": {
            "description": "you're not allowed to delete this user"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{userId}/posts": {
      "get": {
        "tags": ["User's posts"],
        "summary": "find user's posts",
        "description": "Returns found User's posts",
        "operationId": "getMyPosts",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user who owns said posts",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users/{userId}/posts/{postId}": {
      "get": {
        "tags": ["User's posts"],
        "summary": "find a user's post by ID",
        "description": "Returns found User's post",
        "operationId": "getMyPostById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user who owns said posts",
            "required": true,
            "type": "integer"
          },
          {
            "name": "postId",
            "in": "path",
            "description": "ID of the post",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/PostInfo"
            }
          },
          "400": {
            "description": "post not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": ["User's posts"],
        "summary": "edit user's post by ID",
        "description": "Returns validation message",
        "operationId": "editMyPost",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user who owns said post",
            "required": true,
            "type": "integer"
          },
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post to update",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "edit post for your blog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "post updated"
          },
          "400": {
            "description": "ACCESS DENIED: can't update this post with your credentials"
          },
          "500": {
            "description": "user does not own this post"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["User's posts"],
        "summary": "delete user's post by ID",
        "description": "Returns validation message",
        "operationId": "deleteMyPost",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user who owns said post",
            "required": true,
            "type": "integer"
          },
          {
            "name": "postId",
            "in": "path",
            "description": "ID of post to update",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "post deleted"
          },
          "400": {
            "description": "ACCESS DENIED: can't delete this post with your credentials"
          },
          "500": {
            "description": "user does not own this post"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/comments": {
      "get": {
        "tags": ["Comments"],
        "summary": "get All the comments",
        "description": "Returns a list of all comments",
        "operationId": "GetComments",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "succers",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/posts/{postId}/comments": {
      "get": {
        "tags": ["Post's Comments"],
        "summary": "get All the comments from a post",
        "description": "Returns a list of post's comments",
        "operationId": "GetMyComments",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of the post",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "succes",
            "schema": {
              "$ref": "#/definitions/Comments"
            }
          },
          "400": {
            "description": "no comments"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": ["Post's Comments"],
        "summary": "post a new comment on a post",
        "description": "Returns validation message",
        "operationId": "postComment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of the post",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "message of the comment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "comment created"
          },
          "500": {
            "description": "must provice a message"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/posts/{postId}/comments/{commentId}": {
      "get": {
        "tags": ["Post's Comments"],
        "summary": "reads a comment on a post",
        "description": "Returns the comment of the post",
        "operationId": "getMyComment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of the post",
            "required": true,
            "type": "integer"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of the comment",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "succers",
            "schema": {
              "$ref": "#/definitions/CommentInfo"
            }
          },
          "500": {
            "description": "post does not exist"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": ["Post's Comments"],
        "summary": "updates a comment on a post",
        "description": "Returns validation message",
        "operationId": "putComment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of the post",
            "required": true,
            "type": "integer"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of the comment",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "description": "message of the comment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "comment updated"
          },
          "500": {
            "description": "must provice a message"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": ["Post's Comments"],
        "summary": "delete a comment off a post",
        "description": "Returns validation message",
        "operationId": "deleteComment",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "ID of the post",
            "required": true,
            "type": "integer"
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of the comment",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "comment deleted"
          },
          "500": {
            "description": "user can't delete this comment"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "authtoken",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Post": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "userid": {
          "type": "number"
        }
      }
    },
    "PostInfo": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "PostData": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "UserId": {
      "type": "object",
      "properties": {
        "userid": {
          "type": "number"
        }
      }
    },
    "Posts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Post"
      }
    },
    "UserData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserData"
      }
    },
    "Comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "message": {
          "type": "string"
        },
        "postid": {
          "type": "number"
        },
        "userid": {
          "type": "number"
        }
      }
    },
    "CommentData": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "CommentInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "message": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Comments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CommentInfo"
      }
    }
  }
}
