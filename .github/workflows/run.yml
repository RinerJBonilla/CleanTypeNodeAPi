name: Node.js CI

on:
  push:
    branches:
      - testing
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: build docker test db
        run: docker build -t db_test ./test

      - name: run test db
        run: docker run -d -p 3308:3306 db_test
        env:
          T_D_HOST: ${{ secrets.T_D_HOST }}
          T_D_USER: ${{ secrets.T_D_USER }}
          T_D_PASSWORD: ${{ secrets.T_D_PASSWORD }}
          T_D_DATABASE: ${{ secrets.T_D_DATABASE }}
          T_D_DBPORT: ${{ secrets.T_D_DBPORT }}
          T_D_TOKEN: ${{secrets.T_D_TOKEN}}
          TOKEN_SECRET: ${{secrets.TOKEN_SECRET}}
          PORT: ${{ secrets.PORT }}

      - name: Install dependencies
        run: npm install
        working-directory: ./app

      - name: Test app
        run: npm test
        working-directory: ./app
        env:
          T_D_HOST: ${{ secrets.T_D_HOST }}
          T_D_USER: ${{ secrets.T_D_USER }}
          T_D_PASSWORD: ${{ secrets.T_D_PASSWORD }}
          T_D_DATABASE: ${{ secrets.T_D_DATABASE }}
          T_D_DBPORT: ${{ secrets.T_D_DBPORT }}
          T_D_TOKEN: ${{secrets.T_D_TOKEN}}
          TOKEN_SECRET: ${{secrets.TOKEN_SECRET}}
          PORT: ${{ secrets.PORT }}

      - name: Build application
        run: npm run build --if-present
        working-directory: ./app
        env:
          CI: true
